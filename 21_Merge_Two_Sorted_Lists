/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2){
		if(l1 == null) return l2;
		if(l2 == null) return l1;
		if(l1.val < l2.val){
			l1.next = mergeTwoLists(l1.next, l2);
			return l1;
		} else{
			l2.next = mergeTwoLists(l1, l2.next);
			return l2;
		}
    }
    
    // public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
    //     ListNode i = l1;
    //     ListNode j = l2;
    //     ListNode res = new ListNode(0); //dump head;
    //     ListNode idx = res;
    //     while (i != null || j != null) {
    //         if (i == null) {
    //             idx.next = j; break;
    //         } 
    //         if (j == null) {
    //             idx.next = i; break;
    //         }
    //         if (i.val <= j.val) {
    //             idx.next = new ListNode(i.val);
    //             i = i.next;
    //         } else {
    //             idx.next = new ListNode(j.val);
    //             j = j.next;
    //         }
    //         //move index of resule list
    //         idx = idx.next;
    //     }
    //     return res.next;
    // }
}
