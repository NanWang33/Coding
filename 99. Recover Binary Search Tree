/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    TreeNode firstElement = null;
    TreeNode secondElement = null;
    TreeNode prevElement = null;
    
    public void recoverTree(TreeNode root) {
        if (root == null)
            return;
        
        // In order traversal to find the two elements
        traverse(root);
        
        // Swap the values of the two nodes
        int temp = firstElement.val;
        firstElement.val = secondElement.val;
        secondElement.val = temp;
    }
    
    private void traverse(TreeNode root) {
        if (root == null)
            return;
        traverse(root.left);
        
        if (firstElement == null && prevElement != null && prevElement.val >= root.val) {
            firstElement = prevElement;
        }
    
        if (firstElement != null && prevElement != null && prevElement.val >= root.val) {
            secondElement = root;
        }        
        prevElement = root;


        traverse(root.right);
}
}
