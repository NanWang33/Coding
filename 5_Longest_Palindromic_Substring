class Solution {

    //Too slow
    public String longestPalindrome(String s) {        
        if (s == null || s.isEmpty()) return null;
        
        int max = 1;
        String res = "" + s.charAt(0); //don't assign a char to string
        
        for (int i = 0; i < s.length(); i++) {
            int j = 0;
            int k = 0;
            while (i - j >= max / 2 && i + j < s.length() && 
                   i - k >= max / 2 && i + k + 1 < s.length()) {
                if (s.charAt(i - j) == s.charAt(i + j)) j++;
                else {
                    if (2 * j + 1 > max) {
                        max = 2 * j + 1;
                        res = s.substring(i - j, i + j + 1);
                    }
                }
                if (s.charAt(i - k) == s.charAt(i + k + 1)) k++;
                else {
                    if (2 * k > max) {
                        max = 2 * k;
                        res = s.substring(i - k + 1, i + k + 1);
                    }
                }
        }
        return res;
    }
}
