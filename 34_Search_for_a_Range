class Solution {

    //8ms, binary search twice
    public int[] searchRange(int[] nums, int target) {
        if (nums == null || nums.length == 0) return new int[]{-1, -1};
        
        int l = 0;
        int r = nums.length - 1;
        
        while (l <= r) {
            int mid = (l + r) / 2;
            if (target <= nums[mid]) r = mid - 1;
            else l = mid + 1;
        }
        
        if (l >= nums.length || l < 0 || nums[l] != target) return new int[]{-1, -1};
        
        r = nums.length - 1;
        int left = l;
        while (l <= r) {
            int mid = (l + r) / 2;
            if (target + 1 <= nums[mid]) r = mid - 1;
            else l = mid + 1;
        }
        int right = l - 1;
        return new int[]{left, right};
    }
}
