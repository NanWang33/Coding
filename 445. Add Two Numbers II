/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> s1 = new Stack<Integer>();
        Stack<Integer> s2 = new Stack<Integer>();
        while(l1 != null) {
            s1.push(l1.val);
            l1 = l1.next;
        }
        while(l2 != null) {
            s2.push(l2.val);
            l2 = l2.next;
        }
        
        int flag = 0;
        
        Stack<Integer> s3 = new Stack<Integer>();
        while(!s1.empty() || !s2.empty()){
            int x = s1.empty() ? 0 : s1.pop();
            int y = s2.empty() ? 0 : s2.pop();
            int res = (x + y + flag) % 10;
            flag = (x + y + flag) / 10;
            s3.push(res);
        }
        if (flag == 1) s3.push(1);
        
        ListNode index = new ListNode(0);
        ListNode result = index;
        while (!s3.empty()) {
            index.next = new ListNode(s3.pop());
            index = index.next;
        }
        return result.next;
    }
}
