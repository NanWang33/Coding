/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        List<Integer> list = new ArrayList<Integer>();
        while (head != null) {
            list.add(head.val);
            head = head.next;
        }
        return sortedArrayToBST(list.toArray(new Integer[list.size()]));
    }
    
    public TreeNode sortedArrayToBST(Integer[] nums) {
        if (nums == null || nums.length == 0) return null;
        return sort(nums, 0, nums.length-1);
    }
    private TreeNode sort(Integer[] nums, int l, int r) {
        if (l > r) return null;

        int m = l + (r - l)/2;
        TreeNode root = new TreeNode(nums[m]);
        root.left = sort(nums, l, m - 1);
        root.right = sort(nums, m + 1, r);
        return root;
    }
}
