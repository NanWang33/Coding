class Solution {
    public int rob(int[] nums) {
        // if (nums == null || nums.length == 0) return 0;
        // int size = nums.length;
        // int[] dp = new int[size];
        // dp[0] = nums[0];
        // if (size == 1) return dp[0];
        // dp[1] = nums[1];
        // if (size == 2) return Math.max(dp[0], dp[1]);
        // dp[2] = nums[0] + nums[2];
        // for (int i = 3; i < nums.length; i++) {
        //     dp[i] = Math.max(dp[i-2], dp[i-3]) + nums[i];
        // }
        // return Math.max(dp[size-1], dp[size-2]);
        
        int[] dp = new int[nums.length];
        if (nums == null || nums.length == 0) return 0;
        dp[0] = nums[0];
        if (nums.length == 1) return dp[0];
        dp[1] = Math.max(nums[0], nums[1]);
        for (int i = 2; i < nums.length; i++) {
            dp[i] = Math.max(dp[i-1], dp[i-2] + nums[i]);
        }
        return dp[nums.length-1];
    }
}
