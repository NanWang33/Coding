/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode previous = null;
        ListNode index = head;
        while (index != null) {
            ListNode next = index.next;
            index.next = previous;
            previous = index;
            index = next;
        }
        return previous;
        
        //Use stack
        // Stack<Integer> s = new Stack<Integer>();
        // while (head != null) {
        //     s.push(head.val);
        //     head = head.next;
        // }
        // ListNode res = new ListNode(0);
        // ListNode index = res;
        // while (!s.empty()){
        //     index.next = new ListNode(s.pop());
        //     index = index.next;
        // }
        // return res.next;
    }
}
