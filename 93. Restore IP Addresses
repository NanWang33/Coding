class Solution {
    public List<String> restoreIpAddresses(String s) {
        List<String> res = new ArrayList<String>();
        if (s == null || s.length() > 12) return res;
        dfs(s, 0, res, new StringBuilder(), 0);
        return res;
    }
    
    private void dfs(String s, int index, List<String> res, StringBuilder sb, int depth) {
        if (depth > 4) return;
        if (index == s.length() && depth == 4) {
            res.add(sb.toString().substring(0, sb.length()-1));
            sb = new StringBuilder();
            return;
        }
        
        for (int i = 1; i <= 3; i++) {
            if (index + i > s.length()) break;
            String news = s.substring(index, index+i);
            if (Integer.parseInt(news) < 256) {
                int tmp = sb.length();
                sb.append(news + ".");
                dfs(s, index+i, res, sb, depth+1);
                sb.delete(tmp, sb.length());
            }
            if (news.equals("0")) break;
        }
    }
}
