/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<String>();
        StringBuilder sb = new StringBuilder();
        if (root == null) return res;
        helper(root, sb.append(root.val), res);
        return res;
    }
    private void helper(TreeNode root, StringBuilder sb, List<String> res) {
        if (root == null) return;
        if (root.left == null && root.right == null){
            res.add(sb.toString());
        }
        int index = sb.length();
        if (root.left != null) {
            helper(root.left, sb.append("->" + root.left.val), res);
            sb.delete(index, sb.length());
        }
        if (root.right != null) {
            helper(root.right, sb.append("->" + root.right.val), res);
            sb.delete(index, sb.length());
        }
    }
}
