class Solution {

    //14ms vertical search
    public String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0) return "";
        StringBuilder sb = new StringBuilder();
        int index = 0;
        boolean stop = false;
        while(index < strs[0].length()) {
            char c = strs[0].charAt(index);
            for (String one : strs) {
                //Avoid index out of boundary!
                if (index >= one.length() || one.charAt(index) != c) {
                    stop = true;
                    break;
                }
            }
            if (!stop) {
                sb.append(c);
                index++;
            } else {
                break;
            }
        }
        return sb.toString();
    }
    
    //12ms vertical search simplify
    public String longestCommonPrefix1(String[] strs) {
        if (strs == null || strs.length == 0) return "";
        for (int i = 0; i < strs[0].length(); i++) {
            char c = strs[0].charAt(i);
            for (int j = 0; j < strs.length; j++) {
                if (i < strs[j].length() && strs[j].charAt(i) == c) continue;
                else return strs[0].substring(0, i);
            }
        }
        return strs[0];
    }
}
