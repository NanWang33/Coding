class Solution {
//     public List<Integer> partitionLabels(String S) {
//         char[] chars = S.toCharArray();
//         List<Integer> res = new ArrayList<Integer>();
        
//         int start = 0;
//         while(start < S.length()) {
//             char c = chars[start];
//             int end  = S.lastIndexOf(c);
//             for (int i = start + 1; i < end; i++) {
//                 String left = S.substring(end+1);
//                 if (left.indexOf(chars[i]) >= 0) end = S.lastIndexOf(chars[i]);
//             }
//             res.add(end - start + 1);
//             start = end + 1;
//         }
//         return res;
//     }
    
    public List<Integer> partitionLabels(String S) {
        if(S == null || S.length() == 0){
            return null;
        }
        List<Integer> list = new ArrayList<>();
        int[] map = new int[26];  // record the last index of the each char

        for(int i = 0; i < S.length(); i++){
            map[S.charAt(i)-'a'] = i;
        }
        // record the end index of the current sub string
        int last = 0;
        int start = 0;
        for(int i = 0; i < S.length(); i++){
            last = Math.max(last, map[S.charAt(i)-'a']);
            if(last == i){
                list.add(last - start + 1);
                start = last + 1;
            }
        }
        return list;
    }
}
