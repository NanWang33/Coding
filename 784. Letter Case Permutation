class Solution {
    public List<String> letterCasePermutation(String S) {
        List<String> res = new ArrayList<String>();
        dfs(S, 0, new StringBuilder(), res);
        return res;
    }
    
    private void dfs(String s, int depth, StringBuilder sb, List<String> res) {
        if (depth == s.length()) {
            res.add(sb.toString());
            return;
        }
        char c = s.charAt(depth);
        if ( c <= '9' && c >= '0') {
            sb.append(c);
            dfs(s, depth+1, sb, res);
            sb.deleteCharAt(sb.length()-1);
        } else {
            String str = "" + c;
            sb.append(str.toLowerCase());
            dfs(s, depth+1, sb, res);
            sb.deleteCharAt(sb.length()-1);
            sb.append(str.toUpperCase());
            dfs(s, depth+1, sb, res);
            sb.deleteCharAt(sb.length()-1);
        }
        
    }
}
