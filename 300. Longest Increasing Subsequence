class Solution {
    //Binary Search + dp
    public int lengthOfLIS(int[] nums) {
        int[] dp = new int[nums.length];
        int len = 0;
        for (int num : nums) {
            int i = Arrays.binarySearch(dp, 0, len, num);
            if (i < 0) {
                i = -(i + 1);
            }
            dp[i] = num;
            if (i == len) {
                len++;
            }
        }
        return len;
    }
    
    //DP
//     public int lengthOfLIS(int[] nums) {
//         if (nums == null || nums.length == 0) return 0;
        
//         int[] dp = new int[nums.length];
//         Arrays.fill(dp, 1);
        
//         for (int i = 1; i < nums.length; i++) {
//             int cur = nums[i];
//             for (int j = 0; j < i; j++) {
//                 if (nums[j] < cur) dp[i] = Math.max(dp[i], dp[j] + 1);
//             }
//         }
        
//         int res = 1;
//         for (int i = 1; i < nums.length; i++) {
//             if (dp[i] > res) res = dp[i];
//         }
//         return res;
//     }
}
